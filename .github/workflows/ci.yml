name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      matrix:
        php: [8.2, 8.3]
        dependency-version: [prefer-stable]

    name: PHP ${{ matrix.php }} - Laravel ${{ matrix.laravel }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo, pdo_sqlite, phar, tokenizer, xml, xmlreader, xmlwriter, zip, curl, fileinfo, openssl, bcmath, soap, sockets, sodium, exif, pcntl, calendar, sysvmsg, sysvsem, sysvshm
        coverage: xdebug
        tools: composer:v2

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-php-${{ matrix.php }}-composer-

    - name: Cache npm dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install PHP dependencies
      run: composer install --prefer-dist --no-progress --no-interaction

    - name: Install Node.js dependencies
      run: npm ci

    - name: Copy environment file
      run: cp .env.example .env

    - name: Generate application key
      run: php artisan key:generate

    - name: Set up database
      run: |
        php artisan migrate --force
        php artisan db:seed --force

    - name: Run PHPUnit tests
      run: vendor/bin/phpunit --coverage-clover=coverage.xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo, pdo_sqlite, phar, tokenizer, xml, xmlreader, xmlwriter, zip, curl, fileinfo, openssl, bcmath, soap, sockets, sodium, exif, pcntl, calendar, sysvmsg, sysvsem, sysvshm
        tools: composer:v2

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-php-8.3-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-php-8.3-composer-

    - name: Cache npm dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install PHP dependencies
      run: composer install --prefer-dist --no-progress --no-interaction

    - name: Install Node.js dependencies
      run: npm ci

    - name: Run Laravel Pint
      run: ./vendor/bin/pint --test

    - name: Run PHPStan
      run: ./vendor/bin/phpstan analyse --memory-limit=2G

    - name: Run ESLint (if configured)
      run: npm run lint 2>/dev/null || echo "ESLint not configured"

    - name: Check for syntax errors
      run: find . -name "*.php" -not -path "./vendor/*" -not -path "./node_modules/*" -exec php -l {} \;

  security:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo, pdo_sqlite, phar, tokenizer, xml, xmlreader, xmlwriter, zip, curl, fileinfo, openssl, bcmath, soap, sockets, sodium, exif, pcntl, calendar, sysvmsg, sysvsem, sysvshm
        tools: composer:v2

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-php-8.3-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-php-8.3-composer-

    - name: Install PHP dependencies
      run: composer install --prefer-dist --no-progress --no-interaction

    - name: Run security audit
      run: composer audit --format=json --no-interaction

    - name: Run npm audit (if package.json exists)
      run: npm audit --audit-level=moderate 2>/dev/null || echo "No npm audit issues found"

  build:
    runs-on: ubuntu-latest
    needs: [test, lint, security]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Cache npm dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Node.js dependencies
      run: npm ci

    - name: Build assets
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-assets
        path: public/build/
        retention-days: 7
